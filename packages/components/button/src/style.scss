@use '../node_modules/@ohvue/theme/dist/scss' as *;
@use 'sass:color';

@include b(button) {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  background: transparent;
  border: none;
  transition: all ease 0.3s;

  &:active {
    transform: scale(0.98);
  }

  @include with-is('disabled') {
    cursor: not-allowed;
    filter: grayscale(50%);

    &:active {
      transform: none;
    }
  }

  @include m(size-sm) {
    font: getTextStyleValue(sm);
    padding: getDimensionValue(padding, 1) getDimensionValue(padding, 2);
    gap: getDimensionValue(gap, '0-5');

    @include with-m(radius-sm) {
      border-radius: getDimensionValue(border-radius, base);
    }
    @include with-m(radius-md) {
      border-radius: getDimensionValue(border-radius, md);
    }
    @include with-m(radius-lg) {
      border-radius: getDimensionValue(border-radius, lg);
    }

    @include include-e(icon) {
      font-size: getDimensionValue(size, 4);
    }
    @include with-is(icon-only) {
      padding: getDimensionValue(padding, 0);
      width: getDimensionValue(size, 7);
      height: getDimensionValue(size, 7);
    }
  }
  @include m(size-md) {
    font: getTextStyleValue(base);
    padding: getDimensionValue(padding, 1) getDimensionValue(padding, 3);
    gap: getDimensionValue(gap, 1);

    @include with-m(radius-sm) {
      border-radius: getDimensionValue(border-radius, md);
    }
    @include with-m(radius-md) {
      border-radius: getDimensionValue(border-radius, lg);
    }
    @include with-m(radius-lg) {
      border-radius: getDimensionValue(border-radius, xl);
    }

    @include include-e(icon) {
      font-size: getDimensionValue(size, 5);
    }
    @include with-is(icon-only) {
      padding: getDimensionValue(padding, 0);
      width: getDimensionValue(size, 8);
      height: getDimensionValue(size, 8);
    }
  }
  @include m(size-lg) {
    font: getTextStyleValue(xl);
    padding: getDimensionValue(padding, 1) getDimensionValue(padding, 4);
    gap: getDimensionValue(gap, 1);

    @include with-m(radius-sm) {
      border-radius: getDimensionValue(border-radius, lg);
    }
    @include with-m(radius-md) {
      border-radius: getDimensionValue(border-radius, xl);
    }
    @include with-m(radius-lg) {
      border-radius: getDimensionValue(border-radius, 2xl);
    }

    @include include-e(icon) {
      font-size: getDimensionValue(size, 6);
    }
    @include with-is(icon-only) {
      padding: getDimensionValue(padding, 0);
      width: getDimensionValue(size, 9);
      height: getDimensionValue(size, 9);
    }
  }

  @include m(radius-none) {
    border-radius: getDimensionValue(border-radius, none);
  }
  @include m(radius-full) {
    border-radius: getDimensionValue(border-radius, full);
  }

  @include m(color-default) {
    @include with-m(variant-solid) {
      color: getThemeValue(light, foreground-inverse);
      background: getColorValue(gray-400);

      &:hover {
        background: getColorValue(gray-500);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(gray-400);
        }
      }

      @include theme(dark) {
        color: getThemeValue(dark, foreground-inverse);
        background: getColorValue(gray-600);

        &:hover {
          background: getColorValue(gray-500);
        }

        @include with-is('disabled') {
          &:hover {
            background: getColorValue(gray-600);
          }
        }
      }
    }

    @include with-m(variant-bordered) {
      color: getColorValue(gray-950);
      border: getDimensionValue(border-width, 1) solid getColorValue(gray-200);

      &:hover {
        background: getColorValue(gray-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(gray-50);
        border-color: getColorValue(gray-800);

        &:hover {
          background: getColorValue(gray-800);
        }

        @include with-is('disabled') {
          &:hover {
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-light) {
      color: getColorValue(gray-950);

      &:hover {
        background: getColorValue(gray-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(gray-50);

        &:hover {
          background: getColorValue(gray-800);
        }

        @include with-is('disabled') {
          &:hover {
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-flat) {
      color: getColorValue(gray-950);
      background: getColorValue(gray-100);

      &:hover {
        background: getColorValue(gray-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(gray-100);
        }
      }

      @include theme(dark) {
        color: getColorValue(gray-50);
        background: getColorValue(gray-900);

        &:hover {
          background: getColorValue(gray-800);
        }

        @include with-is('disabled') {
          &:hover {
            background: getColorValue(gray-800);
          }
        }
      }
    }

    @include with-m(variant-ghost) {
      color: getColorValue(gray-950);
      border: getDimensionValue(border-width, 1) solid getColorValue(gray-400);

      &:hover {
        background: getColorValue(gray-400);
      }

      @include with-is('disabled') {
        &:hover {
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(gray-50);
        border-color: getColorValue(gray-600);

        &:hover {
          background: getColorValue(gray-600);
        }

        @include with-is('disabled') {
          &:hover {
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-shadow) {
      color: getThemeValue(light, foreground-inverse);
      background: getColorValue(gray-400);
      box-shadow: 2px 8px 20px 2px getColorValue(gray-200);

      &:hover {
        background: getColorValue(gray-500);
        box-shadow: 2px 8px 20px 0 getColorValue(gray-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(gray-400);
          box-shadow: 2px 8px 20px 2px getColorValue(gray-200);
        }
      }

      @include theme(dark) {
        color: getThemeValue(dark, foreground-inverse);
        background: getColorValue(gray-600);
        box-shadow: 2px 8px 20px 1px getColorValue(gray-900);

        &:hover {
          background: getColorValue(gray-500);
          box-shadow: 2px 8px 20px 0 getColorValue(gray-950);
        }

        @include with-is('disabled') {
          &:hover {
            background: getColorValue(gray-600);
            box-shadow: 2px 8px 20px 1px getColorValue(gray-900);
          }
        }
      }
    }
  }
  @include m(color-primary) {
    @include with-m(variant-solid) {
      color: getThemeValue(light, foreground-inverse);
      background: getColorValue(primary-700);

      &:hover {
        background: getColorValue(primary-600);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(primary-700);
        }
      }
    }

    @include with-m(variant-bordered) {
      color: getColorValue(primary-600);
      border: getDimensionValue(border-width, 1) solid getColorValue(primary-400);

      &:hover {
        background: getColorValue(primary-50);
      }

      @include with-is('disabled') {
        &:hover {
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(primary-400);
        border-color: getColorValue(primary-600);

        &:hover {
          background: getColorValue(primary-950);
        }

        @include with-is('disabled') {
          &:hover {
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-light) {
      color: getColorValue(primary-600);

      &:hover {
        background: getColorValue(primary-100);
      }

      @include with-is('disabled') {
        &:hover {
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(primary-400);

        &:hover {
          background: getColorValue(primary-900);
        }

        @include with-is('disabled') {
          &:hover {
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-flat) {
      color: getColorValue(primary-600);
      background: getColorValue(primary-100);

      &:hover {
        background: getColorValue(primary-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(primary-100);
        }
      }

      @include theme(dark) {
        color: getColorValue(primary-400);
        background: getColorValue(primary-900);

        &:hover {
          background: getColorValue(primary-800);
        }

        @include with-is('disabled') {
          &:hover {
            background: getColorValue(primary-900);
          }
        }
      }
    }

    @include with-m(variant-ghost) {
      color: getColorValue(primary-600);
      border: getDimensionValue(border-width, 1) solid getColorValue(primary-400);

      &:hover {
        color: getThemeValue(light, foreground-inverse);
        background: getColorValue(primary-400);
      }

      @include with-is('disabled') {
        &:hover {
          color: getColorValue(primary-600);
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(primary-400);
        border-color: getColorValue(primary-600);

        &:hover {
          color: getThemeValue(theme, foreground-inverse);
          background: getColorValue(primary-600);
        }

        @include with-is('disabled') {
          &:hover {
            color: getColorValue(primary-400);
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-shadow) {
      color: getThemeValue(light, foreground-inverse);
      background: getColorValue(primary-700);
      box-shadow: 2px 8px 20px 2px getColorValue(primary-200);

      &:hover {
        background: getColorValue(primary-600);
        box-shadow: 2px 8px 20px 0 getColorValue(primary-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(primary-700);
          box-shadow: 2px 8px 20px 2px getColorValue(primary-200);
        }
      }

      @include theme(dark) {
        box-shadow: 2px 8px 20px 2px getColorValue(primary-800);

        &:hover {
          box-shadow: 2px 8px 20px 0 getColorValue(primary-800);
        }

        @include with-is('disabled') {
          &:hover {
            box-shadow: 2px 8px 20px 2px getColorValue(primary-800);
          }
        }
      }
    }
  }
  @include m(color-success) {
    @include with-m(variant-solid) {
      color: getThemeValue(light, foreground-inverse);
      background: getColorValue(green-700);

      &:hover {
        background: getColorValue(green-600);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(green-700);
        }
      }
    }

    @include with-m(variant-bordered) {
      color: getColorValue(green-600);
      border: getDimensionValue(border-width, 1) solid getColorValue(green-400);

      &:hover {
        background: getColorValue(green-50);
      }

      @include with-is('disabled') {
        &:hover {
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(green-400);
        border-color: getColorValue(green-600);

        &:hover {
          background: getColorValue(green-950);
        }

        @include with-is('disabled') {
          &:hover {
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-light) {
      color: getColorValue(green-600);

      &:hover {
        background: getColorValue(green-100);
      }

      @include with-is('disabled') {
        &:hover {
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(green-400);

        &:hover {
          background: getColorValue(green-900);
        }

        @include with-is('disabled') {
          &:hover {
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-flat) {
      color: getColorValue(green-600);
      background: getColorValue(green-100);

      &:hover {
        background: getColorValue(green-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(green-100);
        }
      }

      @include theme(dark) {
        color: getColorValue(green-400);
        background: getColorValue(green-900);

        &:hover {
          background: getColorValue(green-800);
        }

        @include with-is('disabled') {
          &:hover {
            background: getColorValue(green-900);
          }
        }
      }
    }

    @include with-m(variant-ghost) {
      color: getColorValue(green-600);
      border: getDimensionValue(border-width, 1) solid getColorValue(green-400);

      &:hover {
        color: getThemeValue(light, foreground-inverse);
        background: getColorValue(green-400);
      }

      @include with-is('disabled') {
        &:hover {
          color: getColorValue(green-600);
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(green-400);
        border-color: getColorValue(green-600);

        &:hover {
          color: getThemeValue(theme, foreground-inverse);
          background: getColorValue(green-600);
        }

        @include with-is('disabled') {
          &:hover {
            color: getColorValue(green-400);
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-shadow) {
      color: getThemeValue(light, foreground-inverse);
      background: getColorValue(green-700);
      box-shadow: 2px 8px 20px 2px getColorValue(green-200);

      &:hover {
        background: getColorValue(green-600);
        box-shadow: 2px 8px 20px 0 getColorValue(green-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(green-700);
          box-shadow: 2px 8px 20px 2px getColorValue(green-200);
        }
      }

      @include theme(dark) {
        box-shadow: 2px 8px 20px 2px getColorValue(green-800);

        &:hover {
          box-shadow: 2px 8px 20px 0 getColorValue(green-800);
        }

        @include with-is('disabled') {
          &:hover {
            box-shadow: 2px 8px 20px 2px getColorValue(green-800);
          }
        }
      }
    }
  }
  @include m(color-warning) {
    @include with-m(variant-solid) {
      color: getThemeValue(light, foreground-inverse);
      background: getColorValue(yellow-700);

      &:hover {
        background: getColorValue(yellow-600);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(yellow-700);
        }
      }
    }

    @include with-m(variant-bordered) {
      color: getColorValue(yellow-600);
      border: getDimensionValue(border-width, 1) solid getColorValue(yellow-400);

      &:hover {
        background: getColorValue(yellow-50);
      }

      @include with-is('disabled') {
        &:hover {
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(yellow-400);
        border-color: getColorValue(yellow-600);

        &:hover {
          background: getColorValue(yellow-950);
        }

        @include with-is('disabled') {
          &:hover {
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-light) {
      color: getColorValue(yellow-600);

      &:hover {
        background: getColorValue(yellow-100);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(yellow-600);
        }
      }

      @include theme(dark) {
        color: getColorValue(yellow-400);

        &:hover {
          background: getColorValue(yellow-900);
        }

        @include with-is('disabled') {
          &:hover {
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-flat) {
      color: getColorValue(yellow-600);
      background: getColorValue(yellow-100);

      &:hover {
        background: getColorValue(yellow-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(yellow-100);
        }
      }

      @include theme(dark) {
        color: getColorValue(yellow-400);
        background: getColorValue(yellow-900);

        &:hover {
          background: getColorValue(yellow-800);
        }

        @include with-is('disabled') {
          &:hover {
            background: getColorValue(yellow-900);
          }
        }
      }
    }

    @include with-m(variant-ghost) {
      color: getColorValue(yellow-600);
      border: getDimensionValue(border-width, 1) solid getColorValue(yellow-400);

      &:hover {
        color: getThemeValue(light, foreground-inverse);
        background: getColorValue(yellow-400);
      }

      @include with-is('disabled') {
        &:hover {
          color: getColorValue(yellow-600);
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(yellow-400);
        border-color: getColorValue(yellow-600);

        &:hover {
          color: getThemeValue(theme, foreground-inverse);
          background: getColorValue(yellow-600);
        }

        @include with-is('disabled') {
          &:hover {
            color: getColorValue(yellow-400);
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-shadow) {
      color: getThemeValue(light, foreground-inverse);
      background: getColorValue(yellow-700);
      box-shadow: 2px 8px 20px 2px getColorValue(yellow-200);

      &:hover {
        background: getColorValue(yellow-600);
        box-shadow: 2px 8px 20px 0 getColorValue(yellow-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(yellow-700);
          box-shadow: 2px 8px 20px 2px getColorValue(yellow-200);
        }
      }

      @include theme(dark) {
        box-shadow: 2px 8px 20px 2px getColorValue(yellow-800);

        &:hover {
          box-shadow: 2px 8px 20px 0 getColorValue(yellow-800);
        }

        @include with-is('disabled') {
          &:hover {
            box-shadow: 2px 8px 20px 2px getColorValue(yellow-800);
          }
        }
      }
    }
  }
  @include m(color-danger) {
    @include with-m(variant-solid) {
      color: getThemeValue(light, foreground-inverse);
      background: getColorValue(red-700);

      &:hover {
        background: getColorValue(red-600);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(red-700);
        }
      }
    }

    @include with-m(variant-bordered) {
      color: getColorValue(red-600);
      border: getDimensionValue(border-width, 1) solid getColorValue(red-400);

      &:hover {
        background: getColorValue(red-50);
      }

      @include with-is('disabled') {
        &:hover {
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(red-400);
        border-color: getColorValue(red-600);

        &:hover {
          background: getColorValue(red-950);
        }

        @include with-is('disabled') {
          &:hover {
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-light) {
      color: getColorValue(red-600);

      &:hover {
        background: getColorValue(red-100);
      }

      @include with-is('disabled') {
        &:hover {
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(red-400);

        &:hover {
          background: getColorValue(red-900);
        }

        @include with-is('disabled') {
          &:hover {
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-flat) {
      color: getColorValue(red-600);
      background: getColorValue(red-100);

      &:hover {
        background: getColorValue(red-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(red-100);
        }
      }

      @include theme(dark) {
        color: getColorValue(red-400);
        background: getColorValue(red-900);

        &:hover {
          background: getColorValue(red-800);
        }

        @include with-is('disabled') {
          &:hover {
            background: getColorValue(red-900);
          }
        }
      }
    }

    @include with-m(variant-ghost) {
      color: getColorValue(red-600);
      border: getDimensionValue(border-width, 1) solid getColorValue(red-400);

      &:hover {
        color: getThemeValue(light, foreground-inverse);
        background: getColorValue(red-400);
      }

      @include with-is('disabled') {
        &:hover {
          color: getColorValue(red-600);
          background: transparent;
        }
      }

      @include theme(dark) {
        color: getColorValue(red-400);
        border-color: getColorValue(red-600);

        &:hover {
          color: getThemeValue(theme, foreground-inverse);
          background: getColorValue(red-600);
        }

        @include with-is('disabled') {
          &:hover {
            color: getColorValue(red-400);
            background: transparent;
          }
        }
      }
    }

    @include with-m(variant-shadow) {
      color: getThemeValue(light, foreground-inverse);
      background: getColorValue(red-700);
      box-shadow: 2px 8px 20px 2px getColorValue(red-200);

      &:hover {
        background: getColorValue(red-600);
        box-shadow: 2px 8px 20px 0 getColorValue(red-200);
      }

      @include with-is('disabled') {
        &:hover {
          background: getColorValue(red-700);
          box-shadow: 2px 8px 20px 2px getColorValue(red-200);
        }
      }

      @include theme(dark) {
        box-shadow: 2px 8px 20px 2px getColorValue(red-800);

        &:hover {
          box-shadow: 2px 8px 20px 0 getColorValue(red-800);
        }

        @include with-is('disabled') {
          &:hover {
            box-shadow: 2px 8px 20px 2px getColorValue(red-800);
          }
        }
      }
    }
  }
}
